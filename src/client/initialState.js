const { List, Map } = require('immutable');

export default {
  app: Map({
    searchBy: 'Restaurants',
    searchName: "",
    searchLocation: "",
    writeRevAnchorEl: null,
    searchReq: false,
    searchUserName: "",
    searchUserLocation: "",
    searchPhoto: null,
    searchGeometry: null,
  }),
  restAdvancedSearch:  Map({
    searchBy: 'nameOnly',
    rating: "1",
    slider: 50,
  }),
  restResults:  Map({
    restaurants: List(),
    alertOpen: false,
    remaining: 1,
    moreReq: false,
    noResults: false,
  }),
  userResults: Map({
    users: List(),
  }),
  writeReview: Map({
    bathroomQuality: "0",
    staffKindness: "0",
    cleanliness: "0",
    driveThroughQuality : "0",
    deliverySpeed: "0",
    foodQuality: "0",
    title: "",
    review: "",
    photos: List(),
    date: "",
  }),
  login: Map({
    username: "",
    password: "",
    error: "",
  }),
  signup: Map({
    firstname: "",
    lastname: "",
    username: "",
    password: "",
    location: "",
    image: null,
    userexists: ""
  }),
  topBar: Map({
    userPhoto: null,
    anchorEl: null,
  }),
  autocompleteRestaurants: Map({
    inputValue: "",
    options: List(),
    loaded: false,
  }),
  restaurantProfile: Map({
    name:"",
    location:"",
    photo:null,
    geometry: null,
    rating:"0",
    reviews: List(),
    remaining: 1,
    alertOpen: false,
  }),
  userprofile: Map({
    firstname: "",
    id: 0,
    lastname: "",
    username: "",
    password: "",
    location: "",
    message: "",
    image: null,
    userexists: "",
    reviews: List(),
    remaining: 1,
  }),
  reviewsSort: Map({
    sortDate: "newFirst",
    sortTopic: "foodQuality",
    filterDate: "lastYear" ,
    filterTopic: "1",
    reviewSortUpdated: false,
  }),
  autocompleteUser: Map({
    inputValue: "",
    options: List(),
    loaded: false,
  }),
};
